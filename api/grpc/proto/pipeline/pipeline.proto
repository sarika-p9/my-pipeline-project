syntax = "proto3";

package proto;

option go_package = "github.com/sarika-p9/my-pipeline-project/api/grpc/proto/pipeline";

import "google/protobuf/any.proto";

service PipelineService {
    rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse);
    rpc StartPipeline(StartPipelineRequest) returns (StartPipelineResponse);
    rpc GetPipelineStatus(GetPipelineStatusRequest) returns (GetPipelineStatusResponse);
    rpc CancelPipeline(CancelPipelineRequest) returns (CancelPipelineResponse);
}

message CreatePipelineRequest {
    int32 stages = 1;
    bool is_parallel = 2;
    string user_id = 3;  // Changed from UUID to string
    string pipeline_name = 4;  // Optional, defaults to "Untitled Pipeline" if empty
    repeated string stage_names = 5; // New field for stage names
}


message CreatePipelineResponse {
    string pipeline_id = 1;
}

message StartPipelineRequest {
    string pipeline_id = 1;
    google.protobuf.Any input = 2;
    bool is_parallel = 3;
    string user_id = 4;  // Changed from UUID to string
}

message StartPipelineResponse {
    string message = 1;
}

message GetPipelineStatusRequest {
    string pipeline_id = 1;
    bool is_parallel = 2;
}

message GetPipelineStatusResponse {
    string pipeline_id = 1;
    string status = 2;
}

message CancelPipelineRequest {
    string pipeline_id = 1;
    bool is_parallel = 2;
    string user_id = 3;  // Changed from UUID to string
}

message CancelPipelineResponse {
    string message = 1;
}
